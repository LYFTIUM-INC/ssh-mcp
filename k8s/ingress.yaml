# SSH-MCP Kubernetes Ingress Configuration
# External access to SSH-MCP services
# 
# Author: Andre (OptinampOut) with Claude Code assistance
# Organization: LYFTIUM-INC
# Date: July 15, 2025

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ssh-mcp-ingress
  namespace: ssh-mcp
  labels:
    app: ssh-mcp
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - ssh-mcp.lyftium.com
    secretName: ssh-mcp-tls
  rules:
  - host: ssh-mcp.lyftium.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ssh-mcp-service
            port:
              number: 3001
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: ssh-mcp-service
            port:
              number: 3001

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ssh-mcp-grafana-ingress
  namespace: ssh-mcp
  labels:
    app: ssh-mcp
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    nginx.ingress.kubernetes.io/rate-limit: "5"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - grafana.lyftium.com
    secretName: grafana-tls
  rules:
  - host: grafana.lyftium.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ssh-mcp-grafana
            port:
              number: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ssh-mcp-prometheus-ingress
  namespace: ssh-mcp
  labels:
    app: ssh-mcp
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - prometheus.lyftium.com
    secretName: prometheus-tls
  rules:
  - host: prometheus.lyftium.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ssh-mcp-prometheus
            port:
              number: 9090

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ssh-mcp-alertmanager-ingress
  namespace: ssh-mcp
  labels:
    app: ssh-mcp
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - alertmanager.lyftium.com
    secretName: alertmanager-tls
  rules:
  - host: alertmanager.lyftium.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ssh-mcp-alertmanager
            port:
              number: 9093

---
apiVersion: v1
kind: Secret
metadata:
  name: basic-auth
  namespace: ssh-mcp
  labels:
    app: ssh-mcp
    component: auth
type: Opaque
stringData:
  auth: |
    # Generate with: htpasswd -c auth admin
    # Default: admin:admin
    admin:$2y$10$E6/rTlRJVa5I.HkWyJPmf.QTMjLNdYJMFnxYEhkJ9AoWxP0eJnJhK