# Docker Compose for SSH-MCP Monitoring Stack
# Generated for LYFTIUM-INC SSH-MCP project
# Includes Prometheus, Grafana, Node Exporter, and Redis Exporter

version: '3.8'

services:
  # Prometheus server
  prometheus:
    image: prom/prometheus:latest
    container_name: ssh-mcp-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - ssh-mcp-monitoring

  # Grafana dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: ssh-mcp-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana-dashboard.json:/etc/grafana/provisioning/dashboards/ssh-mcp.json
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/ssh-mcp.json
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - ssh-mcp-monitoring

  # Node Exporter for system metrics
  node_exporter:
    image: prom/node-exporter:latest
    container_name: ssh-mcp-node-exporter
    command:
      - '--path.rootfs=/host'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host:ro,rslave
    restart: unless-stopped
    networks:
      - ssh-mcp-monitoring

  # Redis server for caching
  redis:
    image: redis:7-alpine
    container_name: ssh-mcp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - ssh-mcp-monitoring

  # Redis Exporter for Redis metrics
  redis_exporter:
    image: oliver006/redis_exporter:latest
    container_name: ssh-mcp-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - ssh-mcp-monitoring

  # Alertmanager for handling alerts
  alertmanager:
    image: prom/alertmanager:latest
    container_name: ssh-mcp-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    restart: unless-stopped
    networks:
      - ssh-mcp-monitoring

  # SSH-MCP Application (for reference)
  # ssh-mcp:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: ssh-mcp-app
  #   ports:
  #     - "3001:3001"
  #     - "3002:3002"
  #   environment:
  #     - REDIS_HOST=redis
  #     - PROMETHEUS_PORT=3001
  #     - MONITORING_ENABLED=true
  #   depends_on:
  #     - redis
  #   restart: unless-stopped
  #   networks:
  #     - ssh-mcp-monitoring

networks:
  ssh-mcp-monitoring:
    driver: bridge

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local
  alertmanager_data:
    driver: local